# Generated by Django 5.1.5 on 2025-02-01 21:55

import datetime
import django.db.models.deletion
import django.utils.timezone
import django_authx.fields.modelfields.phonenumber
import django_authx.models.auth
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Session',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='deleted at')),
                ('is_active', models.BooleanField(db_index=True, default=False)),
                ('is_verified', models.BooleanField(db_index=True, default=False)),
                ('last_used', models.DateTimeField(auto_now=True, db_index=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('session_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='session ID')),
                ('token', models.CharField(db_index=True, help_text='Token is auto-generated on save.', max_length=64, unique=True)),
                ('token_ttl', models.DurationField(default=datetime.timedelta(days=1), help_text='\n            Token Time To Live (TTL) in timedelta. Format: <code>DAYS HH:MM:SS</code>.\n            ', verbose_name='Token Time To Live (TTL)')),
                ('throttle_rate', models.CharField(blank=True, default='', help_text="Follows the same format as DRF's throttle rates.\n            Format: <em>'number_of_requests/period'</em>\n            where period should be one of: ('s', 'm', 'h', 'd').\n            Example: '100/h' implies 100 requests each hour.\n            ", max_length=64, verbose_name='Throttle rate for requests authed with this client')),
                ('auth_backend', models.CharField(db_index=True, max_length=126, verbose_name='auth backend')),
                ('client_name', models.CharField(db_index=True, max_length=255, verbose_name='client name')),
                ('ip_address', models.GenericIPAddressField(db_index=True, verbose_name='IP address')),
                ('location', models.CharField(db_index=True, max_length=255, verbose_name='location')),
                ('last_activity', models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name='last activity')),
                ('expires_at', models.DateTimeField(verbose_name='expires at')),
                ('remember_session', models.BooleanField(db_index=True, default=False)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Session',
                'verbose_name_plural': 'Sessions',
                'db_table': 'sessions_model',
            },
        ),
        migrations.CreateModel(
            name='MagicLinkAuth',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='deleted at')),
                ('is_active', models.BooleanField(db_index=True, default=False)),
                ('is_verified', models.BooleanField(db_index=True, default=False)),
                ('last_used', models.DateTimeField(auto_now=True, db_index=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('token', models.CharField(db_index=True, default=django_authx.models.auth.generate_token, max_length=255, unique=True, verbose_name='token')),
                ('expires_at', models.DateTimeField(default=django_authx.models.auth.get_default_expiry)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_auth', to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='django_authx.session')),
            ],
            options={
                'verbose_name': 'Magic Link',
                'verbose_name_plural': 'Magic Links',
                'db_table': 'authx_magic_links',
            },
        ),
        migrations.CreateModel(
            name='TOTPAuth',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='deleted at')),
                ('is_active', models.BooleanField(db_index=True, default=False)),
                ('is_verified', models.BooleanField(db_index=True, default=False)),
                ('last_used', models.DateTimeField(auto_now=True, db_index=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('secret_key', models.CharField(max_length=32, verbose_name='secret key')),
                ('backup_codes', models.JSONField(default=list, verbose_name='backup codes')),
                ('last_used_at', models.DateTimeField(db_index=True, null=True, verbose_name='last used at')),
                ('device_name', models.CharField(db_index=True, max_length=255, null=True, verbose_name='device name')),
                ('recovery_codes', models.JSONField(default=list, verbose_name='recovery codes')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_auth', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'TOTP Device',
                'verbose_name_plural': 'TOTP Devices',
                'db_table': 'authx_totps',
            },
        ),
        migrations.CreateModel(
            name='EmailAuth',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='deleted at')),
                ('is_active', models.BooleanField(db_index=True, default=False)),
                ('is_verified', models.BooleanField(db_index=True, default=False)),
                ('last_used', models.DateTimeField(auto_now=True, db_index=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('email', models.EmailField(db_index=True, error_messages={'unique': 'An account with this email already exists.'}, max_length=254, unique=True, verbose_name='email')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_auth', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Email Address',
                'verbose_name_plural': 'Email Addresses',
                'db_table': 'authx_emails',
                'indexes': [models.Index(fields=['email', 'is_active', 'is_verified'], name='authx_email_email_9be672_idx')],
            },
        ),
        migrations.CreateModel(
            name='OAuth2Auth',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='deleted at')),
                ('is_active', models.BooleanField(db_index=True, default=False)),
                ('is_verified', models.BooleanField(db_index=True, default=False)),
                ('last_used', models.DateTimeField(auto_now=True, db_index=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('provider', models.CharField(db_index=True, max_length=50, verbose_name='provider')),
                ('provider_id', models.CharField(db_index=True, max_length=255, verbose_name='provider ID')),
                ('access_token', models.CharField(db_index=True, max_length=1024, verbose_name='access token')),
                ('refresh_token', models.CharField(blank=True, max_length=1024, null=True, verbose_name='refresh token')),
                ('expires_at', models.DateTimeField(verbose_name='expires at')),
                ('scope', models.CharField(blank=True, max_length=1024, null=True, verbose_name='scopes')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_auth', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'OAuth Account',
                'verbose_name_plural': 'OAuth Accounts',
                'db_table': 'authx_oauth2',
                'indexes': [models.Index(fields=['user', 'provider'], name='authx_oauth_user_id_7bb5d1_idx'), models.Index(fields=['user', 'provider', 'is_active'], name='authx_oauth_user_id_57c5ec_idx')],
                'unique_together': {('provider', 'provider_id')},
            },
        ),
        migrations.CreateModel(
            name='PhoneAuth',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='deleted at')),
                ('is_active', models.BooleanField(db_index=True, default=False)),
                ('is_verified', models.BooleanField(db_index=True, default=False)),
                ('last_used', models.DateTimeField(auto_now=True, db_index=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('phone', django_authx.fields.modelfields.phonenumber.PhoneNumberField(help_text='E.164 format: +[country code][number]', max_length=32, region=None, unique=True, verbose_name='phone')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_auth', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Phone Number',
                'verbose_name_plural': 'Phone Numbers',
                'db_table': 'authx_phones',
                'indexes': [models.Index(fields=['phone', 'is_active', 'is_verified'], name='authx_phone_phone_82864b_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='session',
            index=models.Index(fields=['user', 'auth_backend'], name='sessions_mo_user_id_e41bcb_idx'),
        ),
        migrations.AddIndex(
            model_name='session',
            index=models.Index(fields=['user', 'auth_backend', 'is_active'], name='sessions_mo_user_id_39ff3e_idx'),
        ),
        migrations.AddIndex(
            model_name='session',
            index=models.Index(fields=['client_name', 'ip_address'], name='sessions_mo_client__f89a4c_idx'),
        ),
        migrations.AddConstraint(
            model_name='session',
            constraint=models.CheckConstraint(condition=models.Q(('expires_at__gt', models.F('created_at'))), name='session_expiry_after_creation'),
        ),
        migrations.AddIndex(
            model_name='magiclinkauth',
            index=models.Index(fields=['user', 'created_at'], name='authx_magic_user_id_937ff5_idx'),
        ),
        migrations.AddIndex(
            model_name='magiclinkauth',
            index=models.Index(fields=['token', 'is_active'], name='authx_magic_token_f9154e_idx'),
        ),
        migrations.AddIndex(
            model_name='totpauth',
            index=models.Index(fields=['user', 'device_name'], name='authx_totps_user_id_52a3d9_idx'),
        ),
        migrations.AddIndex(
            model_name='totpauth',
            index=models.Index(fields=['user', 'device_name', 'is_active'], name='authx_totps_user_id_9c3759_idx'),
        ),
        migrations.AddIndex(
            model_name='totpauth',
            index=models.Index(fields=['last_used', 'is_active'], name='authx_totps_last_us_27e6b7_idx'),
        ),
        migrations.AddConstraint(
            model_name='totpauth',
            constraint=models.UniqueConstraint(fields=('user', 'device_name'), name='unique_user_device'),
        ),
    ]
