# Generated by Django 5.1.5 on 2025-02-23 13:02

import django.db.models.deletion
import django_authx.models.modelfields.encrypted_fields
import django_authx.models.modelfields.phonenumber
import django_authx.models.session
import django_authx.utils.tokens
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PushAuth',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending Verification'), ('active', 'Active'), ('used_up', 'Used Up'), ('expired', 'Expired'), ('disabled', 'Disabled'), ('suspended', 'Suspended'), ('locked', 'Temporarily Locked')], db_index=True, default='pending', help_text='Current status of this auth method', max_length=20)),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='active')),
                ('is_verified', models.BooleanField(db_index=True, default=False, verbose_name='verified')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='When this record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When this record was last updated')),
                ('last_used_at', models.DateTimeField(blank=True, help_text='When this method was last successfully used', null=True)),
                ('failed_attempts', models.PositiveIntegerField(default=0, help_text='Number of consecutive failed attempts')),
                ('locked_until', models.DateTimeField(blank=True, help_text='Locked until this timestamp', null=True)),
                ('device_token', django_authx.models.modelfields.encrypted_fields.EncryptedTextField()),
                ('device_name', models.CharField(max_length=255)),
                ('platform', models.CharField(max_length=50)),
                ('user', models.ForeignKey(help_text='User this record belongs to', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TOTPAuth',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending Verification'), ('active', 'Active'), ('used_up', 'Used Up'), ('expired', 'Expired'), ('disabled', 'Disabled'), ('suspended', 'Suspended'), ('locked', 'Temporarily Locked')], db_index=True, default='pending', help_text='Current status of this auth method', max_length=20)),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='active')),
                ('is_verified', models.BooleanField(db_index=True, default=False, verbose_name='verified')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='When this record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When this record was last updated')),
                ('last_used_at', models.DateTimeField(blank=True, help_text='When this method was last successfully used', null=True)),
                ('failed_attempts', models.PositiveIntegerField(default=0, help_text='Number of consecutive failed attempts')),
                ('locked_until', models.DateTimeField(blank=True, help_text='Locked until this timestamp', null=True)),
                ('token', django_authx.models.modelfields.encrypted_fields.EncryptedCharField(help_text='Encrypted TOTP secret key')),
                ('otp', django_authx.models.modelfields.encrypted_fields.EncryptedCharField(help_text='Current OTP value')),
                ('digits', models.IntegerField(default=6, help_text='Number of digits in OTP')),
                ('interval', models.IntegerField(default=30, help_text='TOTP interval in seconds')),
                ('user', models.ForeignKey(help_text='User this record belongs to', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TrustedDevice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending Verification'), ('active', 'Active'), ('used_up', 'Used Up'), ('expired', 'Expired'), ('disabled', 'Disabled'), ('suspended', 'Suspended'), ('locked', 'Temporarily Locked')], db_index=True, default='pending', help_text='Current status of this auth method', max_length=20)),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='active')),
                ('is_verified', models.BooleanField(db_index=True, default=False, verbose_name='verified')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='When this record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When this record was last updated')),
                ('last_used_at', models.DateTimeField(blank=True, help_text='When this method was last successfully used', null=True)),
                ('failed_attempts', models.PositiveIntegerField(default=0, help_text='Number of consecutive failed attempts')),
                ('locked_until', models.DateTimeField(blank=True, help_text='Locked until this timestamp', null=True)),
                ('device_id', models.UUIDField(default=django_authx.utils.tokens.generate_token, help_text='Unique device identifier', unique=True)),
                ('device_name', models.CharField(help_text='User-friendly device name', max_length=255)),
                ('device_type', models.CharField(help_text='Type of device', max_length=50)),
                ('user_agent', models.TextField(help_text='Browser/device user agent')),
                ('ip_address', models.GenericIPAddressField(help_text='Device IP address')),
                ('fingerprint', django_authx.models.modelfields.encrypted_fields.EncryptedTextField(help_text='Encrypted device fingerprint')),
                ('is_trusted', models.BooleanField(default=True, help_text='Whether device is currently trusted')),
                ('expires_at', models.DateTimeField(help_text='Device trust expiry')),
                ('user', models.ForeignKey(help_text='User this record belongs to', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WebAuthn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending Verification'), ('active', 'Active'), ('used_up', 'Used Up'), ('expired', 'Expired'), ('disabled', 'Disabled'), ('suspended', 'Suspended'), ('locked', 'Temporarily Locked')], db_index=True, default='pending', help_text='Current status of this auth method', max_length=20)),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='active')),
                ('is_verified', models.BooleanField(db_index=True, default=False, verbose_name='verified')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='When this record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When this record was last updated')),
                ('last_used_at', models.DateTimeField(blank=True, help_text='When this method was last successfully used', null=True)),
                ('failed_attempts', models.PositiveIntegerField(default=0, help_text='Number of consecutive failed attempts')),
                ('locked_until', models.DateTimeField(blank=True, help_text='Locked until this timestamp', null=True)),
                ('credential_id', django_authx.models.modelfields.encrypted_fields.EncryptedTextField(help_text='Encrypted WebAuthn credential ID')),
                ('public_key', django_authx.models.modelfields.encrypted_fields.EncryptedTextField(help_text='Encrypted public key')),
                ('sign_count', models.IntegerField(default=0, help_text='Number of successful authentications')),
                ('user', models.ForeignKey(help_text='User this record belongs to', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BackupCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending Verification'), ('active', 'Active'), ('used_up', 'Used Up'), ('expired', 'Expired'), ('disabled', 'Disabled'), ('suspended', 'Suspended'), ('locked', 'Temporarily Locked')], db_index=True, default='pending', help_text='Current status of this auth method', max_length=20)),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='active')),
                ('is_verified', models.BooleanField(db_index=True, default=False, verbose_name='verified')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='When this record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When this record was last updated')),
                ('last_used_at', models.DateTimeField(blank=True, help_text='When this method was last successfully used', null=True)),
                ('failed_attempts', models.PositiveIntegerField(default=0, help_text='Number of consecutive failed attempts')),
                ('locked_until', models.DateTimeField(blank=True, help_text='Locked until this timestamp', null=True)),
                ('code', django_authx.models.modelfields.encrypted_fields.EncryptedCharField(help_text='Encrypted backup code')),
                ('is_used', models.BooleanField(default=False, help_text='Whether code has been used')),
                ('used_at', models.DateTimeField(blank=True, help_text='When code was used', null=True)),
                ('user', models.ForeignKey(help_text='User this record belongs to', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'code')},
            },
        ),
        migrations.CreateModel(
            name='EmailAuth',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending Verification'), ('active', 'Active'), ('used_up', 'Used Up'), ('expired', 'Expired'), ('disabled', 'Disabled'), ('suspended', 'Suspended'), ('locked', 'Temporarily Locked')], db_index=True, default='pending', help_text='Current status of this auth method', max_length=20)),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='active')),
                ('is_verified', models.BooleanField(db_index=True, default=False, verbose_name='verified')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='When this record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When this record was last updated')),
                ('last_used_at', models.DateTimeField(blank=True, help_text='When this method was last successfully used', null=True)),
                ('failed_attempts', models.PositiveIntegerField(default=0, help_text='Number of consecutive failed attempts')),
                ('locked_until', models.DateTimeField(blank=True, help_text='Locked until this timestamp', null=True)),
                ('is_primary', models.BooleanField(default=False)),
                ('email', models.EmailField(db_index=True, error_messages={'unique': 'An account with this email already exists.'}, max_length=254, unique=True, verbose_name='email')),
                ('user', models.ForeignKey(help_text='User this record belongs to', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Email Address',
                'verbose_name_plural': 'Email Addresses',
                'db_table': 'authx_emails',
                'indexes': [models.Index(fields=['email', 'is_active', 'is_verified'], name='authx_email_email_9be672_idx')],
            },
        ),
        migrations.CreateModel(
            name='OAuth2Auth',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending Verification'), ('active', 'Active'), ('used_up', 'Used Up'), ('expired', 'Expired'), ('disabled', 'Disabled'), ('suspended', 'Suspended'), ('locked', 'Temporarily Locked')], db_index=True, default='pending', help_text='Current status of this auth method', max_length=20)),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='active')),
                ('is_verified', models.BooleanField(db_index=True, default=False, verbose_name='verified')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='When this record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When this record was last updated')),
                ('last_used_at', models.DateTimeField(blank=True, help_text='When this method was last successfully used', null=True)),
                ('failed_attempts', models.PositiveIntegerField(default=0, help_text='Number of consecutive failed attempts')),
                ('locked_until', models.DateTimeField(blank=True, help_text='Locked until this timestamp', null=True)),
                ('provider', models.CharField(db_index=True, max_length=50, verbose_name='provider')),
                ('provider_id', models.CharField(db_index=True, max_length=255, verbose_name='provider ID')),
                ('access_token', models.CharField(db_index=True, max_length=1024, verbose_name='access token')),
                ('refresh_token', models.CharField(blank=True, max_length=1024, null=True, verbose_name='refresh token')),
                ('expires_at', models.DateTimeField(verbose_name='expires at')),
                ('scope', models.CharField(blank=True, max_length=1024, null=True, verbose_name='scopes')),
                ('user', models.ForeignKey(help_text='User this record belongs to', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'OAuth Account',
                'verbose_name_plural': 'OAuth Accounts',
                'db_table': 'authx_oauth2',
                'indexes': [models.Index(fields=['user', 'provider'], name='authx_oauth_user_id_7bb5d1_idx'), models.Index(fields=['user', 'provider', 'is_active'], name='authx_oauth_user_id_57c5ec_idx')],
                'unique_together': {('provider', 'provider_id')},
            },
        ),
        migrations.CreateModel(
            name='PhoneAuth',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending Verification'), ('active', 'Active'), ('used_up', 'Used Up'), ('expired', 'Expired'), ('disabled', 'Disabled'), ('suspended', 'Suspended'), ('locked', 'Temporarily Locked')], db_index=True, default='pending', help_text='Current status of this auth method', max_length=20)),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='active')),
                ('is_verified', models.BooleanField(db_index=True, default=False, verbose_name='verified')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='When this record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When this record was last updated')),
                ('last_used_at', models.DateTimeField(blank=True, help_text='When this method was last successfully used', null=True)),
                ('failed_attempts', models.PositiveIntegerField(default=0, help_text='Number of consecutive failed attempts')),
                ('locked_until', models.DateTimeField(blank=True, help_text='Locked until this timestamp', null=True)),
                ('is_primary', models.BooleanField(default=False)),
                ('phone', django_authx.models.modelfields.phonenumber.PhoneNumberField(help_text='E.164 format: +[country code][number]', max_length=32, region=None, unique=True, verbose_name='phone')),
                ('user', models.ForeignKey(help_text='User this record belongs to', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Phone Number',
                'verbose_name_plural': 'Phone Numbers',
                'db_table': 'authx_phones',
                'indexes': [models.Index(fields=['phone', 'is_active', 'is_verified'], name='authx_phone_phone_82864b_idx')],
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('status', models.CharField(choices=[('pending', 'Pending Verification'), ('active', 'Active'), ('used_up', 'Used Up'), ('expired', 'Expired'), ('disabled', 'Disabled'), ('suspended', 'Suspended'), ('locked', 'Temporarily Locked')], db_index=True, default='pending', help_text='Current status of this auth method', max_length=20)),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='active')),
                ('is_verified', models.BooleanField(db_index=True, default=False, verbose_name='verified')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='When this record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When this record was last updated')),
                ('last_used_at', models.DateTimeField(blank=True, help_text='When this method was last successfully used', null=True)),
                ('failed_attempts', models.PositiveIntegerField(default=0, help_text='Number of consecutive failed attempts')),
                ('locked_until', models.DateTimeField(blank=True, help_text='Locked until this timestamp', null=True)),
                ('session_key', models.CharField(default=django_authx.utils.tokens.generate_token, max_length=64, primary_key=True, serialize=False, verbose_name='session key')),
                ('auth_backend', models.CharField(db_index=True, default='django.contrib.auth.backends.ModelBackend', max_length=126, verbose_name='auth backend')),
                ('access_token', models.CharField(db_index=True, default=django_authx.utils.tokens.generate_token, max_length=64, unique=True, verbose_name='access token')),
                ('refresh_token', models.CharField(db_index=True, default=django_authx.utils.tokens.generate_token, max_length=64, unique=True, verbose_name='refresh token')),
                ('expires_at', models.DateTimeField(db_index=True, verbose_name='expires at')),
                ('remember_session', models.BooleanField(db_index=True, default=False, help_text='If enabled, extends session lifetime', verbose_name='remember session')),
                ('user_agent', models.TextField(blank=True, default='', verbose_name='user agent')),
                ('ip_address', models.GenericIPAddressField(blank=True, db_index=True, null=True, verbose_name='IP address')),
                ('location', models.CharField(db_index=True, max_length=255, verbose_name='location')),
                ('throttle_rate', models.CharField(blank=True, default='', max_length=64, verbose_name='throttle rate')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sessions_set', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'db_table': 'authx_sessions',
                'indexes': [models.Index(fields=['user', 'auth_backend'], name='authx_sessi_user_id_3d4f17_idx'), models.Index(fields=['user', 'auth_backend', 'is_active'], name='authx_sessi_user_id_27bc8d_idx'), models.Index(fields=['last_used_at'], name='authx_sessi_last_us_9282e1_idx'), models.Index(fields=['user_agent', 'ip_address'], name='authx_sessi_user_ag_f28051_idx')],
                'constraints': [models.CheckConstraint(condition=models.Q(('expires_at__gt', models.F('created_at'))), name='session_expiry_after_creation')],
            },
            managers=[
                ('objects', django_authx.models.session.SessionManager()),
            ],
        ),
    ]
